// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ozon.Db;

#nullable disable

namespace Ozon.Db.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250424131036_Initialization2")]
    partial class Initialization2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompareProduct", b =>
                {
                    b.Property<Guid>("ComparesUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ComparesUserId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CompareProduct");
                });

            modelBuilder.Entity("Ozon.Db.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Ozon.Db.Models.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItem");
                });

            modelBuilder.Entity("Ozon.Db.Models.Compare", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.ToTable("Compares");
                });

            modelBuilder.Entity("Ozon.Db.Models.Like", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("Ozon.Db.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Num")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num"));

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Ozon.Db.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LikeUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LikeUserId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3438f2c3-754d-4926-a8c5-ef89244b600c"),
                            Cost = 120m,
                            Description = "Описание продукта",
                            ImagePath = "",
                            Name = "Вода"
                        },
                        new
                        {
                            Id = new Guid("3cbf160f-7057-4342-8998-c807ab3bd17b"),
                            Cost = 137m,
                            Description = "Описание продукта",
                            ImagePath = "",
                            Name = "Канат "
                        },
                        new
                        {
                            Id = new Guid("4e21a164-f1f5-4000-855a-8bb0fe6d1660"),
                            Cost = 334m,
                            Description = "Описание продукта",
                            ImagePath = "",
                            Name = "Мыло"
                        },
                        new
                        {
                            Id = new Guid("6e4446ac-a7b2-4e33-b9da-9b9528176826"),
                            Cost = 537m,
                            Description = "Описание продукта",
                            ImagePath = "",
                            Name = "Ведро"
                        },
                        new
                        {
                            Id = new Guid("c5d72e67-8122-418f-8e99-04510cabf5c8"),
                            Cost = 623m,
                            Description = "Описание продукта",
                            ImagePath = "",
                            Name = "Корм"
                        },
                        new
                        {
                            Id = new Guid("de472045-c37b-4ec4-a1b1-fe92b8949585"),
                            Cost = 222m,
                            Description = "Описание продукта",
                            ImagePath = "",
                            Name = "Хлеб"
                        });
                });

            modelBuilder.Entity("CompareProduct", b =>
                {
                    b.HasOne("Ozon.Db.Models.Compare", null)
                        .WithMany()
                        .HasForeignKey("ComparesUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ozon.Db.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ozon.Db.Models.CartItem", b =>
                {
                    b.HasOne("Ozon.Db.Models.Cart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ozon.Db.Models.Product", "Product")
                        .WithMany("Items")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ozon.Db.Models.Order", b =>
                {
                    b.HasOne("Ozon.Db.Models.Cart", "Cart")
                        .WithMany("Orders")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("Ozon.Db.Models.Product", b =>
                {
                    b.HasOne("Ozon.Db.Models.Like", null)
                        .WithMany("Products")
                        .HasForeignKey("LikeUserId");
                });

            modelBuilder.Entity("Ozon.Db.Models.Cart", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Ozon.Db.Models.Like", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Ozon.Db.Models.Product", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
